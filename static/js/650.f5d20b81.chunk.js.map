{"version":3,"file":"static/js/650.f5d20b81.chunk.js","mappings":"sSAEMA,E,OAAWC,EAAAA,OAAa,CAC5BC,QAAS,+BACTC,OAAQ,CACNC,QAAS,sCAIAC,EAAS,mCAAG,sGACAL,EAASM,IAAI,uBADb,uBACfC,EADe,EACfA,KADe,kBAGhBA,GAHgB,2CAAH,qDAMTC,EAAc,mCAAG,WAAMC,GAAN,yFACLT,EAASM,IAAI,gBAAiB,CACnDH,OAAQ,CACNM,MAAAA,EACAC,KAAM,EACNC,cAAc,KALU,uBACpBJ,EADoB,EACpBA,KADoB,kBASrBA,GATqB,2CAAH,sDAYdK,EAAe,mCAAG,WAAMC,GAAN,yFACNb,EAASM,IAAT,iBAAuBO,GAAM,CAClDV,OAAQ,CACNW,SAAU,WAHe,uBACrBP,EADqB,EACrBA,KADqB,kBAOtBA,GAPsB,2CAAH,sDAUfQ,EAAe,mCAAG,WAAMF,GAAN,yFACNb,EAASM,IAAT,iBAAuBO,EAAvB,aADM,uBACrBN,EADqB,EACrBA,KADqB,kBAGtBA,GAHsB,2CAAH,sDAMfS,EAAe,mCAAG,WAAMH,GAAN,yFACNb,EAASM,IAAT,iBAAuBO,EAAvB,aADM,uBACrBN,EADqB,EACrBA,KADqB,kBAGtBA,GAHsB,2CAAH,qD,yGCc5B,UApDyB,WACvB,OAA0BU,EAAAA,EAAAA,UAAS,IAAnC,eAAOC,EAAP,KAAcC,EAAd,KACA,GAA8BF,EAAAA,EAAAA,WAAS,GAAvC,eAAOG,EAAP,KAAgBC,EAAhB,KACA,GAA0BJ,EAAAA,EAAAA,UAAS,MAAnC,eAAOK,EAAP,KAAcC,EAAd,KAEQC,GAAYC,EAAAA,EAAAA,MAAZD,SACRE,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAW,mCAAG,sGAEhBN,GAAW,GAFK,UAGON,EAAAA,EAAAA,IAAgBS,GAHvB,gBAGRI,EAHQ,EAGRA,KACRT,EAASS,GAJO,gDAMhBL,EAAS,EAAD,IANQ,yBAQhBF,GAAW,GARK,4EAAH,qDAYjBM,GACD,GAAE,CAACH,IAEJ,IAAMK,EAAWX,EAAMY,KAAI,SAAAC,GACzB,IAAQC,EAA2CD,EAA3CC,QAASC,EAAkCF,EAAlCE,aAAcC,EAAoBH,EAApBG,KAAMC,EAAcJ,EAAdI,UACrC,OACE,2BACE,gBACEC,IACEH,EAAY,yCAC0BA,GAClC,2FAENI,IAAKH,KAEP,wBAAKA,KACL,0BACE,0CACCC,OAZIH,EAgBZ,IAED,OACE,2BACGZ,IAAW,sCACXE,IAAS,uBAAIA,EAAMgB,WACpB,wBAAKT,MAGV,C","sources":["api/films.js","components/MovieDetailsCast/MovieDetailsCast.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst instance = axios.create({\n  baseURL: 'https://api.themoviedb.org/3',\n  params: {\n    api_key: '0d2c8f8ee54bc3ab0aecf9b789c7f474',\n  },\n});\n\nexport const getMovies = async () => {\n  const { data } = await instance.get('/trending/movie/day');\n\n  return data;\n};\n\nexport const getSearchMovie = async query => {\n  const { data } = await instance.get('/search/movie', {\n    params: {\n      query,\n      page: 1,\n      include_adul: false,\n    },\n  });\n\n  return data;\n};\n\nexport const getMovieDetails = async id => {\n  const { data } = await instance.get(`/movie/${id}`, {\n    params: {\n      language: 'en-US',\n    },\n  });\n\n  return data;\n};\n\nexport const getMovieCredits = async id => {\n  const { data } = await instance.get(`/movie/${id}/credits`);\n\n  return data;\n};\n\nexport const getMovieReviews = async id => {\n  const { data } = await instance.get(`/movie/${id}/reviews`);\n\n  return data;\n};\n","import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\n\nimport { getMovieCredits } from 'api/films';\n\nconst MovieDetailsCast = () => {\n  const [items, setItems] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  const { movieId } = useParams();\n  useEffect(() => {\n    const fetchMovies = async () => {\n      try {\n        setLoading(true);\n        const { cast } = await getMovieCredits(movieId);\n        setItems(cast);\n      } catch (error) {\n        setError(error);\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    fetchMovies();\n  }, [movieId]);\n\n  const elements = items.map(element => {\n    const { cast_id, profile_path, name, character } = element;\n    return (\n      <li key={cast_id}>\n        <img\n          src={\n            profile_path\n              ? `https://image.tmdb.org/t/p/w500${profile_path}`\n              : 'https://t4.ftcdn.net/jpg/00/65/10/47/360_F_65104718_x17a76wzWKIm3BlhA6uyYVkDs9982c6q.jpg'\n          }\n          alt={name}\n        />\n        <h2>{name}</h2>\n        <p>\n          <span>Character: </span>\n          {character}\n        </p>\n      </li>\n    );\n  });\n\n  return (\n    <div>\n      {loading && <p>...loading</p>}\n      {error && <p>{error.message}</p>}\n      <ul>{elements}</ul>\n    </div>\n  );\n};\n\nexport default MovieDetailsCast;\n"],"names":["instance","axios","baseURL","params","api_key","getMovies","get","data","getSearchMovie","query","page","include_adul","getMovieDetails","id","language","getMovieCredits","getMovieReviews","useState","items","setItems","loading","setLoading","error","setError","movieId","useParams","useEffect","fetchMovies","cast","elements","map","element","cast_id","profile_path","name","character","src","alt","message"],"sourceRoot":""}