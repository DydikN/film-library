{"version":3,"file":"static/js/925.95111264.chunk.js","mappings":"sSAEMA,E,OAAWC,EAAAA,OAAa,CAC5BC,QAAS,+BACTC,OAAQ,CACNC,QAAS,sCAIAC,EAAS,mCAAG,sGACAL,EAASM,IAAI,uBADb,uBACfC,EADe,EACfA,KADe,kBAGhBA,GAHgB,2CAAH,qDAMTC,EAAc,mCAAG,WAAMC,GAAN,yFACLT,EAASM,IAAI,gBAAiB,CACnDH,OAAQ,CACNM,MAAAA,EACAC,KAAM,EACNC,cAAc,KALU,uBACpBJ,EADoB,EACpBA,KADoB,kBASrBA,GATqB,2CAAH,sDAYdK,EAAe,mCAAG,WAAMC,GAAN,yFACNb,EAASM,IAAT,iBAAuBO,GAAM,CAClDV,OAAQ,CACNW,SAAU,WAHe,uBACrBP,EADqB,EACrBA,KADqB,kBAOtBA,GAPsB,2CAAH,sDAUfQ,EAAe,mCAAG,WAAMF,GAAN,yFACNb,EAASM,IAAT,iBAAuBO,EAAvB,aADM,uBACrBN,EADqB,EACrBA,KADqB,kBAGtBA,GAHsB,2CAAH,sDAMfS,EAAe,mCAAG,WAAMH,GAAN,yFACNb,EAASM,IAAT,iBAAuBO,EAAvB,aADM,uBACrBN,EADqB,EACrBA,KADqB,kBAGtBA,GAHsB,2CAAH,qD,yGCS5B,UA/C4B,WAC1B,OAA0BU,EAAAA,EAAAA,UAAS,IAAnC,eAAOC,EAAP,KAAcC,EAAd,KACA,GAA8BF,EAAAA,EAAAA,WAAS,GAAvC,eAAOG,EAAP,KAAgBC,EAAhB,KACA,GAA0BJ,EAAAA,EAAAA,UAAS,MAAnC,eAAOK,EAAP,KAAcC,EAAd,KAEQC,GAAYC,EAAAA,EAAAA,MAAZD,SACRE,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAW,mCAAG,sGAEhBN,GAAW,GAFK,UAGUL,EAAAA,EAAAA,IAAgBQ,GAH1B,gBAGRI,EAHQ,EAGRA,QACRT,EAASS,GAJO,gDAMhBL,EAAS,EAAD,IANQ,yBAQhBF,GAAW,GARK,4EAAH,qDAYjBM,GACD,GAAE,CAACH,IAEJ,IAAMK,EAAWX,EAAMY,KAAI,SAAAC,GACzB,IAAQlB,EAAoCkB,EAApClB,GAAImB,EAAgCD,EAAhCC,OAAQC,EAAwBF,EAAxBE,WAAYC,EAAYH,EAAZG,QAChC,OACE,2BACE,yBACGD,EAAWE,MAAM,EAAG,IADvB,OACgCH,EADhC,QAGA,uBAAIE,MAJGrB,EAOZ,IAED,OACE,2BACGO,IAAW,sCACXE,IAAS,uBAAIA,EAAMc,UACnBlB,EAAMmB,OAAS,GACd,wBAAKR,KAEL,qEAIP,C","sources":["api/films.js","components/MovieDetailsReviews/MovieDetailsReviews.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst instance = axios.create({\n  baseURL: 'https://api.themoviedb.org/3',\n  params: {\n    api_key: '0d2c8f8ee54bc3ab0aecf9b789c7f474',\n  },\n});\n\nexport const getMovies = async () => {\n  const { data } = await instance.get('/trending/movie/day');\n\n  return data;\n};\n\nexport const getSearchMovie = async query => {\n  const { data } = await instance.get('/search/movie', {\n    params: {\n      query,\n      page: 1,\n      include_adul: false,\n    },\n  });\n\n  return data;\n};\n\nexport const getMovieDetails = async id => {\n  const { data } = await instance.get(`/movie/${id}`, {\n    params: {\n      language: 'en-US',\n    },\n  });\n\n  return data;\n};\n\nexport const getMovieCredits = async id => {\n  const { data } = await instance.get(`/movie/${id}/credits`);\n\n  return data;\n};\n\nexport const getMovieReviews = async id => {\n  const { data } = await instance.get(`/movie/${id}/reviews`);\n\n  return data;\n};\n","import { useParams } from 'react-router-dom';\nimport { useEffect, useState } from 'react';\n\nimport { getMovieReviews } from 'api/films';\n\nconst MovieDetailsReviews = () => {\n  const [items, setItems] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  const { movieId } = useParams();\n  useEffect(() => {\n    const fetchMovies = async () => {\n      try {\n        setLoading(true);\n        const { results } = await getMovieReviews(movieId);\n        setItems(results);\n      } catch (error) {\n        setError(error);\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    fetchMovies();\n  }, [movieId]);\n\n  const elements = items.map(element => {\n    const { id, author, created_at, content } = element;\n    return (\n      <li key={id}>\n        <p>\n          {created_at.slice(0, 10)} | \"{author}\"\n        </p>\n        <p>{content}</p>\n      </li>\n    );\n  });\n\n  return (\n    <div>\n      {loading && <p>...loading</p>}\n      {error && <p>{error.message}</p>}\n      {items.length > 0 ? (\n        <ul>{elements}</ul>\n      ) : (\n        <p>We dont have any reviews for this movie</p>\n      )}\n    </div>\n  );\n};\n\nexport default MovieDetailsReviews;\n"],"names":["instance","axios","baseURL","params","api_key","getMovies","get","data","getSearchMovie","query","page","include_adul","getMovieDetails","id","language","getMovieCredits","getMovieReviews","useState","items","setItems","loading","setLoading","error","setError","movieId","useParams","useEffect","fetchMovies","results","elements","map","element","author","created_at","content","slice","message","length"],"sourceRoot":""}