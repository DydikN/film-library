{"version":3,"file":"static/js/136.0124ef9d.chunk.js","mappings":"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","sources":["api/films.js","webpack://react-homework-template/./src/pages/MovieDetails/movie-details.module.scss?cb87","pages/MovieDetails/MovieDetails.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst instance = axios.create({\n  baseURL: 'https://api.themoviedb.org/3',\n  params: {\n    api_key: '0d2c8f8ee54bc3ab0aecf9b789c7f474',\n  },\n});\n\nexport const getMovies = async () => {\n  const { data } = await instance.get('/trending/movie/day');\n\n  return data;\n};\n\nexport const getSearchMovie = async query => {\n  const { data } = await instance.get('/search/movie', {\n    params: {\n      query,\n      page: 1,\n      include_adul: false,\n    },\n  });\n\n  return data;\n};\n\nexport const getMovieDetails = async id => {\n  const { data } = await instance.get(`/movie/${id}`, {\n    params: {\n      language: 'en-US',\n    },\n  });\n\n  return data;\n};\n\nexport const getMovieCredits = async id => {\n  const { data } = await instance.get(`/movie/${id}/credits`);\n\n  return data;\n};\n\nexport const getMovieReviews = async id => {\n  const { data } = await instance.get(`/movie/${id}/reviews`);\n\n  return data;\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"movie-details_container__Jv1ir\",\"image\":\"movie-details_image__idb6Z\",\"box\":\"movie-details_box__zDsdh\",\"title\":\"movie-details_title__+Bg+p\",\"rating\":\"movie-details_rating__mgcRJ\",\"descr\":\"movie-details_descr__om5eb\",\"subtitle\":\"movie-details_subtitle__p6d4E\",\"genres\":\"movie-details_genres__46wDv\",\"link\":\"movie-details_link__k0S34\",\"activeLink\":\"movie-details_activeLink__jFFyv\",\"button\":\"movie-details_button__-27Fy\"};","import {\n  useParams,\n  NavLink,\n  Outlet,\n  useLocation,\n  useNavigate,\n} from 'react-router-dom';\nimport { useEffect, useState } from 'react';\n\nimport Loader from 'components/Loader/Loader';\nimport styles from './movie-details.module.scss';\nimport Notiflix from 'notiflix';\n\nimport { getMovieDetails } from 'api/films';\n\nconst MovieDetails = () => {\n  const [movieInfo, setMovieInfo] = useState({});\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  const { movieId } = useParams();\n\n  const navigate = useNavigate();\n\n  const location = useLocation();\n  const from = location.state?.from || '/';\n\n  const goBack = () => {\n    navigate(from);\n  };\n\n  useEffect(() => {\n    const fetchMovies = async () => {\n      try {\n        setLoading(true);\n        const result = await getMovieDetails(movieId);\n        setMovieInfo(result);\n      } catch (error) {\n        setError(error);\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    fetchMovies();\n  }, [movieId]);\n\n  const { poster_path, title, vote_average, genres, overview, name } =\n    movieInfo;\n\n  return (\n    <div>\n      {loading && <Loader />}\n      {error && Notiflix.Block(`${error.message} `)}\n      <div>\n        <div className={styles.buttton__wrapper}>\n          <button type=\"button\" className={styles.button} onClick={goBack}>\n            Go Back\n          </button>\n        </div>\n        <div className={styles.container}>\n          <img\n            className={styles.image}\n            src={\n              poster_path\n                ? `https://image.tmdb.org/t/p/w300${poster_path}`\n                : 'https://upload.wikimedia.org/wikipedia/commons/thumb/f/fa/No_photo_available.svg/800px-No_photo_available.svg.png'\n            }\n            alt={title || name}\n            widht=\"300\"\n            height=\"450\"\n          />\n\n          <div className={styles.box}>\n            <h2 className={styles.title}>{title || name} </h2>\n            <p className={styles.rating}>\n              User Score:\n              <span className={styles.descr}>\n                {Number(vote_average).toFixed(1)}\n              </span>\n            </p>\n            <p className={styles.subtitle}>\n              Overview:\n              <span className={styles.descr}>{overview}</span>\n            </p>\n            <p className={styles.subtitle}>\n              Genres:\n              <span className={styles.genres}>\n                {genres && genres.map(genre => genre.name).join(' / ')}\n              </span>\n            </p>\n            <ul>\n              <li>\n                <NavLink\n                  className={({ isActive }) =>\n                    isActive ? styles.activeLink : styles.link\n                  }\n                  state={{ from }}\n                  to=\"cast\"\n                >\n                  Cast\n                </NavLink>\n              </li>\n              <li>\n                <NavLink\n                  className={({ isActive }) =>\n                    isActive ? styles.activeLink : styles.link\n                  }\n                  state={{ from }}\n                  to=\"reviews\"\n                >\n                  Reviews\n                </NavLink>\n              </li>\n            </ul>\n          </div>\n        </div>\n      </div>\n      <Outlet />\n    </div>\n  );\n};\n\nexport default MovieDetails;\n"],"names":["instance","axios","baseURL","params","api_key","getMovies","get","data","getSearchMovie","query","page","include_adul","getMovieDetails","id","language","getMovieCredits","getMovieReviews","useState","movieInfo","setMovieInfo","loading","setLoading","error","setError","movieId","useParams","navigate","useNavigate","from","useLocation","state","useEffect","fetchMovies","result","poster_path","title","vote_average","genres","overview","name","Loader","Notiflix","message","className","styles","type","onClick","src","alt","widht","height","Number","toFixed","map","genre","join","isActive","to"],"sourceRoot":""}