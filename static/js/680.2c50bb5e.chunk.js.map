{"version":3,"file":"static/js/680.2c50bb5e.chunk.js","mappings":"sSAEMA,E,OAAWC,EAAAA,OAAa,CAC5BC,QAAS,+BACTC,OAAQ,CACNC,QAAS,sCAIAC,EAAS,mCAAG,sGACAL,EAASM,IAAI,uBADb,uBACfC,EADe,EACfA,KADe,kBAGhBA,GAHgB,2CAAH,qDAMTC,EAAc,mCAAG,WAAMC,GAAN,yFACLT,EAASM,IAAI,gBAAiB,CACnDH,OAAQ,CACNM,MAAAA,EACAC,KAAM,EACNC,cAAc,KALU,uBACpBJ,EADoB,EACpBA,KADoB,kBASrBA,GATqB,2CAAH,sDAYdK,EAAe,mCAAG,WAAMC,GAAN,yFACNb,EAASM,IAAT,iBAAuBO,GAAM,CAClDV,OAAQ,CACNW,SAAU,WAHe,uBACrBP,EADqB,EACrBA,KADqB,kBAOtBA,GAPsB,2CAAH,sDAUfQ,EAAe,mCAAG,WAAMF,GAAN,yFACNb,EAASM,IAAT,iBAAuBO,EAAvB,aADM,uBACrBN,EADqB,EACrBA,KADqB,kBAGtBA,GAHsB,2CAAH,sDAMfS,EAAe,mCAAG,WAAMH,GAAN,yFACNb,EAASM,IAAT,iBAAuBO,EAAvB,aADM,uBACrBN,EADqB,EACrBA,KADqB,kBAGtBA,GAHsB,2CAAH,qD,2EC1C5B,EAAgC,kCAAhC,EAAiF,iCAAjF,EAAoI,oCAApI,EAAyL,mCAAzL,EAA4O,kCAA5O,EAAoS,wCAApS,EAA4V,kC,SCGtVU,EAAa,SAAC,GAAe,IAAbC,EAAY,EAAZA,MACdC,GAAWC,EAAAA,EAAAA,MAEXC,EAAWH,EAAMI,KACrB,gBAAGT,EAAH,EAAGA,GAAIU,EAAP,EAAOA,MAAOC,EAAd,EAAcA,KAAMC,EAApB,EAAoBA,YAAaC,EAAjC,EAAiCA,aAAcC,EAA/C,EAA+CA,aAA/C,OACE,eAAaC,UAAWC,EAAyB,UAAShB,EAA1D,UACE,UAAC,KAAD,CAAMiB,GAAE,kBAAajB,GAAMkB,MAAO,CAAEC,KAAMb,GAA1C,WACE,gBACES,UAAWC,EACX,UAAShB,EACToB,IACER,EAAW,8CACgCA,GACvC,oHAENS,IAAKX,KAEP,iBAAKK,UAAWC,EAAhB,WACE,eAAID,UAAWC,EAAf,SAA0CN,GAASC,KACnD,cAAGI,UAAWC,EAAd,SACGH,EAAaS,MAAM,EAAG,MAEzB,cAAGP,UAAWC,EAAd,SACGF,EAAaS,QAAQ,YAlBrBvB,EADX,IA2BF,OAAO,eAAIe,UAAWC,EAAf,SAAsCR,GAC9C,EAED,IAEAJ,EAAWoB,aAAe,CACxBnB,MAAO,G,kHCDT,UAlCiB,WACf,OAA0BoB,EAAAA,EAAAA,UAAS,IAAnC,eAAOpB,EAAP,KAAcqB,EAAd,KACA,GAA8BD,EAAAA,EAAAA,WAAS,GAAvC,eAAOE,EAAP,KAAgBC,EAAhB,KACA,GAA0BH,EAAAA,EAAAA,UAAS,MAAnC,eAAOI,EAAP,KAAcC,EAAd,KAmBA,OAjBAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAW,mCAAG,sGAEhBJ,GAAW,GAFK,UAGUpC,EAAAA,EAAAA,MAHV,gBAGRyC,EAHQ,EAGRA,QAERP,EAASO,GALO,gDAOhBH,EAAS,EAAD,IAPQ,yBAShBF,GAAW,GATK,4EAAH,qDAajBI,GACD,GAAE,KAGD,4BACE,2CACCL,IAAW,SAAC,IAAD,IAEXE,IAAS,uBAAIA,EAAMK,UAEnB7B,EAAM8B,OAAS,IAAK,SAAC,IAAD,CAAY9B,MAAOA,MAG7C,C","sources":["api/films.js","webpack://react-homework-template/./src/components/MoviesList/movie-list.module.scss?e1a4","components/MoviesList/MoviesList.jsx","pages/HomePage/HomePage.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst instance = axios.create({\n  baseURL: 'https://api.themoviedb.org/3',\n  params: {\n    api_key: '0d2c8f8ee54bc3ab0aecf9b789c7f474',\n  },\n});\n\nexport const getMovies = async () => {\n  const { data } = await instance.get('/trending/movie/day');\n\n  return data;\n};\n\nexport const getSearchMovie = async query => {\n  const { data } = await instance.get('/search/movie', {\n    params: {\n      query,\n      page: 1,\n      include_adul: false,\n    },\n  });\n\n  return data;\n};\n\nexport const getMovieDetails = async id => {\n  const { data } = await instance.get(`/movie/${id}`, {\n    params: {\n      language: 'en-US',\n    },\n  });\n\n  return data;\n};\n\nexport const getMovieCredits = async id => {\n  const { data } = await instance.get(`/movie/${id}/credits`);\n\n  return data;\n};\n\nexport const getMovieReviews = async id => {\n  const { data } = await instance.get(`/movie/${id}/reviews`);\n\n  return data;\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"content__item\":\"movie-list_content__item__PfDtX\",\"content__img\":\"movie-list_content__img__CB0ih\",\"box-description\":\"movie-list_box-description__Br6Bb\",\"content__title\":\"movie-list_content__title__dINBI\",\"content__text\":\"movie-list_content__text__KQknf\",\"content__popularity\":\"movie-list_content__popularity__rikdT\",\"content__list\":\"movie-list_content__list__iOUyl\"};","import { Link, useLocation } from 'react-router-dom';\nimport styles from './movie-list.module.scss';\nimport PropTypes from 'prop-types';\n\nconst MoviesList = ({ items }) => {\n  const location = useLocation();\n\n  const elements = items.map(\n    ({ id, title, name, poster_path, release_date, vote_average }) => (\n      <li key={id} className={styles['content__item']} data-id={id}>\n        <Link to={`/movies/${id}`} state={{ from: location }}>\n          <img\n            className={styles['content__img']}\n            data-id={id}\n            src={\n              poster_path\n                ? `https://image.tmdb.org/t/p/original/${poster_path}`\n                : 'https://upload.wikimedia.org/wikipedia/commons/thumb/f/fa/No_photo_available.svg/800px-No_photo_available.svg.png'\n            }\n            alt={title}\n          />\n          <div className={styles['box-description']}>\n            <h2 className={styles['content__title']}>{title || name}</h2>\n            <p className={styles['content__text']}>\n              {release_date.slice(0, 4)}\n            </p>\n            <p className={styles['content__popularity']}>\n              {vote_average.toFixed(1)}\n            </p>\n          </div>\n        </Link>\n      </li>\n    )\n  );\n\n  return <ul className={styles.content__list}>{elements}</ul>;\n};\n\nexport default MoviesList;\n\nMoviesList.defaultProps = {\n  items: [],\n};\n\nMoviesList.propTypes = {\n  items: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      title: PropTypes.string,\n      name: PropTypes.string,\n      poster_path: PropTypes.string.isRequired,\n      release_date: PropTypes.string.isRequired,\n      vote_average: PropTypes.number.isRequired,\n    })\n  ),\n};\n","import { useEffect, useState } from 'react';\nimport { getMovies } from 'api/films';\n\nimport MoviesList from 'components/MoviesList/MoviesList';\nimport Loader from 'components/Loader/Loader';\n\nconst HomePage = () => {\n  const [items, setItems] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    const fetchMovies = async () => {\n      try {\n        setLoading(true);\n        const { results } = await getMovies();\n\n        setItems(results);\n      } catch (error) {\n        setError(error);\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    fetchMovies();\n  }, []);\n\n  return (\n    <div>\n      <h1>Trending today</h1>\n      {loading && <Loader />}\n\n      {error && <p>{error.message}</p>}\n\n      {items.length > 0 && <MoviesList items={items} />}\n    </div>\n  );\n};\n\nexport default HomePage;\n"],"names":["instance","axios","baseURL","params","api_key","getMovies","get","data","getSearchMovie","query","page","include_adul","getMovieDetails","id","language","getMovieCredits","getMovieReviews","MoviesList","items","location","useLocation","elements","map","title","name","poster_path","release_date","vote_average","className","styles","to","state","from","src","alt","slice","toFixed","defaultProps","useState","setItems","loading","setLoading","error","setError","useEffect","fetchMovies","results","message","length"],"sourceRoot":""}