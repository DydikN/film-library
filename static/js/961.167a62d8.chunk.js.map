{"version":3,"file":"static/js/961.167a62d8.chunk.js","mappings":"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","sources":["api/films.js","pages/MovieDetails/MovieDetails.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst instance = axios.create({\n  baseURL: 'https://api.themoviedb.org/3',\n  params: {\n    api_key: '0d2c8f8ee54bc3ab0aecf9b789c7f474',\n  },\n});\n\nexport const getMovies = async () => {\n  const { data } = await instance.get('/trending/movie/day');\n\n  return data;\n};\n\nexport const getSearchMovie = async query => {\n  const { data } = await instance.get('/search/movie', {\n    params: {\n      query,\n      page: 1,\n      include_adul: false,\n    },\n  });\n\n  return data;\n};\n\nexport const getMovieDetails = async id => {\n  const { data } = await instance.get(`/movie/${id}`, {\n    params: {\n      language: 'en-US',\n    },\n  });\n\n  return data;\n};\n\nexport const getMovieCredits = async id => {\n  const { data } = await instance.get(`/movie/${id}/credits`);\n\n  return data;\n};\n\nexport const getMovieReviews = async id => {\n  const { data } = await instance.get(`/movie/${id}/reviews`);\n\n  return data;\n};\n","import {\n  useParams,\n  Link,\n  Outlet,\n  useLocation,\n  useNavigate,\n} from 'react-router-dom';\nimport { useEffect, useState } from 'react';\n\nimport { getMovieDetails } from 'api/films';\n\nconst MovieDetails = () => {\n  const [movieInfo, setMovieInfo] = useState({});\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  const { movieId } = useParams();\n\n  const navigate = useNavigate();\n\n  const location = useLocation();\n  const from = location.state?.from || '/';\n\n  const goBack = () => {\n    navigate(from);\n  };\n\n  useEffect(() => {\n    const fetchMovies = async () => {\n      try {\n        setLoading(true);\n        const result = await getMovieDetails(movieId);\n        setMovieInfo(result);\n      } catch (error) {\n        setError(error);\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    fetchMovies();\n  }, [movieId]);\n\n  const {\n    poster_path,\n    title,\n    vote_average,\n    vote_count,\n    genres,\n    overview,\n    release_date,\n  } = movieInfo;\n\n  let vote;\n  if (vote_average) {\n    vote = Math.round(vote_count);\n    let xVC = String(vote);\n    let sVC = xVC.split('');\n    let indexVC = xVC.length - 1;\n    let wVC = Math.floor(indexVC / 3);\n    for (let i = 1; i <= wVC; i += 1) {\n      indexVC = indexVC - 1 - i;\n      sVC.splice(indexVC, 0, ' ');\n      let rVC = sVC.join('');\n      vote = rVC;\n    }\n  }\n\n  return (\n    <div>\n      {loading && <p>...loading</p>}\n      {error && <p>{error}</p>}\n      <button onClick={goBack}>Go back</button>\n\n      <img\n        src={\n          poster_path\n            ? `https://image.tmdb.org/t/p/w300${poster_path}`\n            : 'https://upload.wikimedia.org/wikipedia/commons/thumb/f/fa/No_photo_available.svg/800px-No_photo_available.svg.png'\n        }\n        alt={title}\n      />\n      <h1>\n        {title} ({String(release_date).slice(0, 4)})\n      </h1>\n      <p>\n        Vote / Votes: {Number(vote_average).toFixed(1)} / {vote}\n      </p>\n      <h2>Overview</h2>\n      <p>{overview}</p>\n      <h3>Genres</h3>\n      {genres && genres.map(genre => <li key={genre.id}>{genre.name}</li>)}\n      <p>Aditional information</p>\n      <ul>\n        <li>\n          <Link state={{ from }} to=\"cast\">\n            Cast\n          </Link>\n        </li>\n        <li>\n          <Link state={{ from }} to=\"reviews\">\n            Reviews\n          </Link>\n        </li>\n      </ul>\n\n      <Outlet />\n    </div>\n  );\n};\n\nexport default MovieDetails;\n"],"names":["instance","axios","baseURL","params","api_key","getMovies","get","data","getSearchMovie","query","page","include_adul","getMovieDetails","id","language","getMovieCredits","getMovieReviews","useState","movieInfo","setMovieInfo","loading","setLoading","error","setError","movieId","useParams","navigate","useNavigate","from","useLocation","state","useEffect","fetchMovies","result","vote","poster_path","title","vote_average","vote_count","genres","overview","release_date","Math","round","xVC","String","sVC","split","indexVC","length","wVC","floor","i","splice","join","onClick","src","alt","slice","Number","toFixed","map","genre","name","to"],"sourceRoot":""}