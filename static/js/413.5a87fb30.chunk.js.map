{"version":3,"file":"static/js/413.5a87fb30.chunk.js","mappings":"sSAEMA,E,OAAWC,EAAAA,OAAa,CAC5BC,QAAS,+BACTC,OAAQ,CACNC,QAAS,sCAIAC,EAAS,mCAAG,sGACAL,EAASM,IAAI,uBADb,uBACfC,EADe,EACfA,KADe,kBAGhBA,GAHgB,2CAAH,qDAMTC,EAAc,mCAAG,WAAMC,GAAN,yFACLT,EAASM,IAAI,gBAAiB,CACnDH,OAAQ,CACNM,MAAAA,EACAC,KAAM,EACNC,cAAc,KALU,uBACpBJ,EADoB,EACpBA,KADoB,kBASrBA,GATqB,2CAAH,sDAYdK,EAAe,mCAAG,WAAMC,GAAN,yFACNb,EAASM,IAAT,iBAAuBO,GAAM,CAClDV,OAAQ,CACNW,SAAU,WAHe,uBACrBP,EADqB,EACrBA,KADqB,kBAOtBA,GAPsB,2CAAH,sDAUfQ,EAAe,mCAAG,WAAMF,GAAN,yFACNb,EAASM,IAAT,iBAAuBO,EAAvB,aADM,uBACrBN,EADqB,EACrBA,KADqB,kBAGtBA,GAHsB,2CAAH,sDAMfS,EAAe,mCAAG,WAAMH,GAAN,yFACNb,EAASM,IAAT,iBAAuBO,EAAvB,aADM,uBACrBN,EADqB,EACrBA,KADqB,kBAGtBA,GAHsB,2CAAH,qD,oDCzCtBU,EAAa,SAAC,GAAe,IAAbC,EAAY,EAAZA,MACdC,GAAWC,EAAAA,EAAAA,MACXC,EAAWH,EAAMI,KAAI,gBAAGT,EAAH,EAAGA,GAAIU,EAAP,EAAOA,MAAOC,EAAd,EAAcA,KAAd,OACzB,yBACE,SAAC,KAAD,CAAMC,GAAE,kBAAaZ,GAAMa,MAAO,CAAEC,KAAMR,GAA1C,SACGI,GAASC,KAFLX,EADgB,IAQ3B,OAAO,wBAAKQ,GACb,EAED,MAEAJ,EAAWW,aAAe,CACxBV,MAAO,G,8ICWT,EA3ByB,SAAC,GAAkB,IAAhBW,EAAe,EAAfA,SAC1B,GAA4BC,EAAAA,EAAAA,UAAS,IAArC,eAAOC,EAAP,KAAeC,EAAf,KAaA,OACE,kBAAMH,SAPiB,SAAAI,GACvBA,EAAEC,iBACFL,EAASE,GACTC,EAAU,GACX,EAGC,WACE,kBACER,KAAK,SACLW,MAAOJ,EACPK,SAhBe,SAAC,GAAgB,IAC5BD,EAD2B,EAAbE,OACdF,MACRH,EAAUG,EAAMG,OACjB,EAcKC,KAAK,OACLC,UAAQ,KAEV,mBAAQD,KAAK,SAAb,sBAGL,E,SCmBD,EAvCmB,WACjB,OAA0BT,EAAAA,EAAAA,UAAS,IAAnC,eAAOZ,EAAP,KAAcuB,EAAd,KACA,GAA8BX,EAAAA,EAAAA,WAAS,GAAvC,eAAOY,EAAP,KAAgBC,EAAhB,KACA,GAA0Bb,EAAAA,EAAAA,UAAS,MAAnC,eAAOc,EAAP,KAAcC,EAAd,KAEA,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACMjB,EAASgB,EAAazC,IAAI,WAEhC2C,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAW,mCAAG,sGAEhBP,GAAW,GAFK,UAGUnC,EAAAA,EAAAA,IAAeuB,GAHzB,gBAGRoB,EAHQ,EAGRA,QAERV,EAASU,GALO,gDAOhBN,EAAS,EAAD,IAPQ,yBAShBF,GAAW,GATK,4EAAH,qDAajBO,GACD,GAAE,CAACnB,IAMJ,OACE,4BACE,SAAC,EAAD,CAAkBF,SANK,SAAAE,GACzBiB,EAAgB,CAAEjB,OAAAA,GACnB,IAKIW,IAAW,sCACXE,GAASA,EAAMQ,QACflC,EAAMmC,OAAS,IAAK,SAACpC,EAAA,EAAD,CAAYC,MAAOA,MAG7C,C","sources":["api/films.js","components/MoviesList/MoviesList.jsx","components/MoviesSearchForm/MoviesSearchForm.jsx","pages/MoviesPage/MoviesPage.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst instance = axios.create({\n  baseURL: 'https://api.themoviedb.org/3',\n  params: {\n    api_key: '0d2c8f8ee54bc3ab0aecf9b789c7f474',\n  },\n});\n\nexport const getMovies = async () => {\n  const { data } = await instance.get('/trending/movie/day');\n\n  return data;\n};\n\nexport const getSearchMovie = async query => {\n  const { data } = await instance.get('/search/movie', {\n    params: {\n      query,\n      page: 1,\n      include_adul: false,\n    },\n  });\n\n  return data;\n};\n\nexport const getMovieDetails = async id => {\n  const { data } = await instance.get(`/movie/${id}`, {\n    params: {\n      language: 'en-US',\n    },\n  });\n\n  return data;\n};\n\nexport const getMovieCredits = async id => {\n  const { data } = await instance.get(`/movie/${id}/credits`);\n\n  return data;\n};\n\nexport const getMovieReviews = async id => {\n  const { data } = await instance.get(`/movie/${id}/reviews`);\n\n  return data;\n};\n","import { Link, useLocation } from 'react-router-dom';\n\nconst MoviesList = ({ items }) => {\n  const location = useLocation();\n  const elements = items.map(({ id, title, name }) => (\n    <li key={id}>\n      <Link to={`/movies/${id}`} state={{ from: location }}>\n        {title || name}\n      </Link>\n    </li>\n  ));\n\n  return <ul>{elements}</ul>;\n};\n\nexport default MoviesList;\n\nMoviesList.defaultProps = {\n  items: [],\n};\n","import { useState } from 'react';\n\nconst MoviesSearchForm = ({ onSubmit }) => {\n  const [search, setSearch] = useState('');\n\n  const handleChange = ({ target }) => {\n    const { value } = target;\n    setSearch(value.trim());\n  };\n\n  const handleFormSubmit = e => {\n    e.preventDefault();\n    onSubmit(search);\n    setSearch('');\n  };\n\n  return (\n    <form onSubmit={handleFormSubmit}>\n      <input\n        name=\"search\"\n        value={search}\n        onChange={handleChange}\n        type=\"text\"\n        required\n      />\n      <button type=\"submit\">Search</button>\n    </form>\n  );\n};\nexport default MoviesSearchForm;\n","import { useState, useEffect } from 'react';\nimport { useSearchParams } from 'react-router-dom';\n\nimport { getSearchMovie } from 'api/films';\n\nimport MoviesSearchForm from 'components/MoviesSearchForm/MoviesSearchForm';\nimport MoviesList from 'components/MoviesList/MoviesList';\n\nconst MoviesPage = () => {\n  const [items, setItems] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  const [searchParams, setSearchParams] = useSearchParams();\n  const search = searchParams.get('search');\n\n  useEffect(() => {\n    const fetchMovies = async () => {\n      try {\n        setLoading(true);\n        const { results } = await getSearchMovie(search);\n\n        setItems(results);\n      } catch (error) {\n        setError(error);\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    fetchMovies();\n  }, [search]);\n\n  const handleChangeSearch = search => {\n    setSearchParams({ search });\n  };\n\n  return (\n    <div>\n      <MoviesSearchForm onSubmit={handleChangeSearch} />\n      {loading && <p>...loading</p>}\n      {error && error.message}\n      {items.length > 0 && <MoviesList items={items} />}\n    </div>\n  );\n};\n\nexport default MoviesPage;\n"],"names":["instance","axios","baseURL","params","api_key","getMovies","get","data","getSearchMovie","query","page","include_adul","getMovieDetails","id","language","getMovieCredits","getMovieReviews","MoviesList","items","location","useLocation","elements","map","title","name","to","state","from","defaultProps","onSubmit","useState","search","setSearch","e","preventDefault","value","onChange","target","trim","type","required","setItems","loading","setLoading","error","setError","useSearchParams","searchParams","setSearchParams","useEffect","fetchMovies","results","message","length"],"sourceRoot":""}